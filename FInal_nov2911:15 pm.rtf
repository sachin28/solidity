{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww21120\viewh15320\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
pragma solidity ^0.4.0;\
\
contract mortal\{\
\
    address public owner;\
\
    function mortal()\{\
\
        owner = msg.sender;\
\
    \}\
\
    modifier onlyOwner\{\
        if (msg.sender != owner)\{\
            throw;\
        \}else\{\
            _;\
        \}\
    \}\
\
    function kill() onlyOwner\{\
\
        suicide(owner);\
    \}\
\}\
\
\
contract CarInfo is mortal\{\
\
    address new_owner;    \
\
    event registerCar_details(string vin, string make, string model, string color, string owner, uint year, uint mileage, uint registrationDate);\
    event getCarDetails_details(string vin, string make, string model, string color, string owner, uint year, uint mileage, uint registrationDate);\
    event setCarDetails_details(string vin, string owner, uint mileage, uint mileageDifference, uint registrationDate);\
  \
    struct CarDetails \{\
        string vin;\
        string make;\
        string model;\
        string color;\
        string owner;\
        uint  year;\
        uint mileage;\
        uint registrationDate;\
    \}\
    mapping(string=>CarDetails) carDetails;\
\
    function CarInfo(address _userAddress) \{\
     	new_owner = _userAddress;\
    \}\
\
    function registerCar(string vin, string make, string model, string color, string owner, uint year, uint mileage) onlyOwner \{\
\
       uint registrationDate = now;\
       registerCar_details(vin, make, model, color, owner, year,  mileage, registrationDate);\
       \
        carDetails[vin] = CarDetails(\{\
            vin: vin,\
            make: make,\
            model: model,\
            color: color,\
            owner: owner,\
            year: year,\
            mileage: mileage,\
            registrationDate: registrationDate\
        \});\
\
    \}\
\
    function getCarDetails(string vin) returns (uint mileage_result) \{\
        mileage_result = carDetails[vin].mileage;\
        getCarDetails_details(\
            vin, carDetails[vin].make, carDetails[vin].model,\
            carDetails[vin].color, carDetails[vin].owner, carDetails[vin].year,\
            carDetails[vin].mileage, carDetails[vin].registrationDate\
        );\
\
        return mileage_result;\
    \}\
\
\
    function setCarDetails(string vin, string _newOwner, uint _mileage) returns (uint mileage_result)\{\
        if(carDetails[vin].mileage < _mileage)\{\
            uint oldMileage = carDetails[vin].mileage;\
            uint mileageDifference = _mileage - oldMileage;\
\
            carDetails[vin].mileage = _mileage;\
            carDetails[vin].registrationDate = now;\
            carDetails[vin].owner = _newOwner;\
            \
\
            mileage_result = carDetails[vin].mileage;\
            string owner = carDetails[vin].owner;\
            uint registrationDate = carDetails[vin].registrationDate;\
            setCarDetails_details(vin, owner, mileage_result, mileageDifference, registrationDate);\
            \
	 return  mileage_result;\
     \} else \{\
	throw;\
    \}\
\
     \}\
\}}